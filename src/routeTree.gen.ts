/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AddNewRecordRouteImport } from './routes/add-new-record'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as LayoutIndexRouteImport } from './routes/_layout.index'
import { Route as LayoutRecordTypeRouteImport } from './routes/_layout.$recordType'

const AddNewRecordRoute = AddNewRecordRouteImport.update({
  id: '/add-new-record',
  path: '/add-new-record',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutRecordTypeRoute = LayoutRecordTypeRouteImport.update({
  id: '/$recordType',
  path: '/$recordType',
  getParentRoute: () => LayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/add-new-record': typeof AddNewRecordRoute
  '/$recordType': typeof LayoutRecordTypeRoute
  '/': typeof LayoutIndexRoute
}
export interface FileRoutesByTo {
  '/add-new-record': typeof AddNewRecordRoute
  '/$recordType': typeof LayoutRecordTypeRoute
  '/': typeof LayoutIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_layout': typeof LayoutRouteWithChildren
  '/add-new-record': typeof AddNewRecordRoute
  '/_layout/$recordType': typeof LayoutRecordTypeRoute
  '/_layout/': typeof LayoutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/add-new-record' | '/$recordType' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/add-new-record' | '/$recordType' | '/'
  id:
    | '__root__'
    | '/_layout'
    | '/add-new-record'
    | '/_layout/$recordType'
    | '/_layout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  AddNewRecordRoute: typeof AddNewRecordRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/add-new-record': {
      id: '/add-new-record'
      path: '/add-new-record'
      fullPath: '/add-new-record'
      preLoaderRoute: typeof AddNewRecordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/$recordType': {
      id: '/_layout/$recordType'
      path: '/$recordType'
      fullPath: '/$recordType'
      preLoaderRoute: typeof LayoutRecordTypeRouteImport
      parentRoute: typeof LayoutRoute
    }
  }
}

interface LayoutRouteChildren {
  LayoutRecordTypeRoute: typeof LayoutRecordTypeRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutRecordTypeRoute: LayoutRecordTypeRoute,
  LayoutIndexRoute: LayoutIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  AddNewRecordRoute: AddNewRecordRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
